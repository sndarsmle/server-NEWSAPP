# cloudbuild.yaml (di project_akhir/server/)

steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/newsapp-backend:${COMMIT_SHA}', '.']

  # Step 2: Push the Docker image to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/newsapp-backend:${COMMIT_SHA}']

  # Step 3: Deploy the image to Google Cloud Run
  - name: 'gcr.io/google.com/cloudsdk/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'newsapp-backend-service'
      - '--image'
      - '${_AR_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_AR_REPO_NAME}/newsapp-backend:${COMMIT_SHA}'
      - '--region'
      - '${_GCP_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - |
        DB_USERNAME=projects/${PROJECT_NUMBER}/secrets/DB_USERNAME:latest,\
        DB_PASSWORD=projects/${PROJECT_NUMBER}/secrets/DB_PASSWORD:latest,\
        DB_HOST=projects/${PROJECT_NUMBER}/secrets/DB_HOST:latest,\
        DB_NAME=projects/${PROJECT_NUMBER}/secrets/DB_NAME:latest,\
        ACCESS_SECRET_KEY=projects/${PROJECT_NUMBER}/secrets/ACCESS_SECRET_KEY:latest,\
        REFRESH_SECRET_KEY=projects/${PROJECT_NUMBER}/secrets/REFRESH_SECRET_KEY:latest,\
        GCS_BUCKET_NAME=projects/${PROJECT_NUMBER}/secrets/GCS_BUCKET_NAME:latest,\
        DEFAULT_PROFILE_PICTURE_URL=projects/${PROJECT_NUMBER}/secrets/DEFAULT_PROFILE_PICTURE_URL:latest

# Definisi Variabel Substitusi
substitutions:
  _AR_LOCATION: us-central1
  _AR_REPO_NAME: ta-newsapp-be
  _GCP_REGION: us-central1

# Tambahkan bagian ini untuk mengelola log build
options:
  # Menggunakan Cloud Logging saja, tanpa perlu GCS bucket terpisah.
  # Ini adalah opsi paling sederhana dan sering direkomendasikan.
  logging: CLOUD_LOGGING_ONLY